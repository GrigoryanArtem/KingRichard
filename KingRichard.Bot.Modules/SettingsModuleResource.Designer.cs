//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KingRichard.Bot.Modules {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class SettingsModuleResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal SettingsModuleResource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("KingRichard.Bot.Modules.SettingsModuleResource", typeof(SettingsModuleResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данная команда уже заблокирована..
        /// </summary>
        internal static string CommandAlreadyBlocked {
            get {
                return ResourceManager.GetString("CommandAlreadyBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данная команда активна..
        /// </summary>
        internal static string CommandAlreadyUnblocked {
            get {
                return ResourceManager.GetString("CommandAlreadyUnblocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Комманда {0} успешно заблокирована..
        /// </summary>
        internal static string CommandBlocked {
            get {
                return ResourceManager.GetString("CommandBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Комманда {0} успешно разблокирована..
        /// </summary>
        internal static string CommandUnblocked {
            get {
                return ResourceManager.GetString("CommandUnblocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на css.
        /// </summary>
        internal static string Css {
            get {
                return ResourceManager.GetString("Css", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}
        ///Ошибка: {1}.
        /// </summary>
        internal static string Exception {
            get {
                return ResourceManager.GetString("Exception", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}
        ///Результат: {1:F3}.
        /// </summary>
        internal static string ExpressionResult {
            get {
                return ResourceManager.GetString("ExpressionResult", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Команды с таким именем не существует..
        /// </summary>
        internal static string FindCommandException {
            get {
                return ResourceManager.GetString("FindCommandException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Модуля с таким именем не существует..
        /// </summary>
        internal static string FindModuleException {
            get {
                return ResourceManager.GetString("FindModuleException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}
        ///Лексическая ошибка: {1}.
        /// </summary>
        internal static string LexicalException {
            get {
                return ResourceManager.GetString("LexicalException", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Markdown.
        /// </summary>
        internal static string Markdown {
            get {
                return ResourceManager.GetString("Markdown", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данный модуль  уже заблокирован..
        /// </summary>
        internal static string ModuleAlreadyBlocked {
            get {
                return ResourceManager.GetString("ModuleAlreadyBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данный модуль активен..
        /// </summary>
        internal static string ModuleAlreadyUnblocked {
            get {
                return ResourceManager.GetString("ModuleAlreadyUnblocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Модуль {0} успешно заблокирован..
        /// </summary>
        internal static string ModuleBlocked {
            get {
                return ResourceManager.GetString("ModuleBlocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Модуль {0} успешно разблокирован..
        /// </summary>
        internal static string ModuleUnblocked {
            get {
                return ResourceManager.GetString("ModuleUnblocked", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Удаленно {0} сообщений от {1}..
        /// </summary>
        internal static string RemoveMessageFormat {
            get {
                return ResourceManager.GetString("RemoveMessageFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Роль невозможно отвязать..
        /// </summary>
        internal static string RoleCantDsiconnect {
            get {
                return ResourceManager.GetString("RoleCantDsiconnect", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Роль отвязана..
        /// </summary>
        internal static string RoleDisconnected {
            get {
                return ResourceManager.GetString("RoleDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Роли [{0}] не существует..
        /// </summary>
        internal static string RoleIsNotExist {
            get {
                return ResourceManager.GetString("RoleIsNotExist", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Роли успешно связаны..
        /// </summary>
        internal static string RolesConnected {
            get {
                return ResourceManager.GetString("RolesConnected", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на {0}
        ///Синтаксическая ошибка: {1}.
        /// </summary>
        internal static string SyntaxException {
            get {
                return ResourceManager.GetString("SyntaxException", resourceCulture);
            }
        }
    }
}
